name: Rust
on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always
  SQLX_VERSION: 0.8.6
  SQLX_FEATURES: "rustls,postgres"
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: password
  POSTGRES_DB: lifemap

jobs:
  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - name: Run Format
        run: cargo fmt --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable

      - name: Install postgresql-client
        run: sudo apt-get install postgresql-client

      - name: Install sqlx-cli
        run: cargo install sqlx-cli
          --version=${{ env.SQLX_VERSION }}
          --features ${{ env.SQLX_FEATURES }}
          --no-default-features
          --locked

      - name: Run init_db.sh
        run: SKIP_DOCKER=true ./scripts/init_db.sh

      - name: Run Clippy
        run: cargo clippy -- -D warnings

  test:
    name: Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable

      - name: Install postgresql-client
        run: sudo apt-get install postgresql-client

      - name: Install sqlx-cli
        run: cargo install sqlx-cli
          --version=${{ env.SQLX_VERSION }}
          --features ${{ env.SQLX_FEATURES }}
          --no-default-features
          --locked

      - name: Run init_db.sh
        run: SKIP_DOCKER=true ./scripts/init_db.sh

      - name: Run Tests
        run: cargo test --all-features

  coverage:
    name: Code coverage
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable

      - name: Install postgresql-client
        run: sudo apt-get install postgresql-client

      - name: Install sqlx-cli
        run: cargo install sqlx-cli
          --version=${{ env.SQLX_VERSION }}
          --features ${{ env.SQLX_FEATURES }}
          --no-default-features
          --locked

      - name: Run init_db.sh
        run: SKIP_DOCKER=true ./scripts/init_db.sh

      - name: Install cargo-tarpaulin
        run: cargo install cargo-tarpaulin

      - name: Run Coverage
        run: cargo tarpaulin --ignore-tests --exclude-files src/main.rs --fail-under 85
